
#ifndef HTSLIB_CMAKE_CONFIG2_H_IN_H
#define HTSLIB_CMAKE_CONFIG2_H_IN_H



/* Define if HTSlib should enable GCS support. */
#cmakedefine ENABLE_GCS

/* Define if HTSlib should enable plugins. */
#cmakedefine ENABLE_PLUGINS

/* Define if HTSlib should enable S3 support. */
#cmakedefine ENABLE_S3

/* Define if you have the Common Crypto library. */
#cmakedefine HAVE_COMMONCRYPTO

/* Define to 1 if you have the `drand48' function. */
#cmakedefine HAVE_DRAND48

/* Define to 1 if you have the `fdatasync' function. */
#cmakedefine HAVE_FDATASYNC

/* Define to 1 if you have the `fsync' function. */
#cmakedefine HAVE_FSYNC

/* Define to 1 if you have the `getpagesize' function. */
#cmakedefine HAVE_GETPAGESIZE

/* Define to 1 if you have the `gmtime_r' function. */
#cmakedefine HAVE_GMTIME_R

/* Define if you have libcrypto-style HMAC(). */
#cmakedefine HAVE_HMAC

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if you have the `bz2' library (-lbz2). */
#cmakedefine HAVE_LIBBZ2

/* Define if libcurl file access is enabled. */
#cmakedefine HAVE_LIBCURL

/* Define if libdeflate is available. */
#cmakedefine HAVE_LIBDEFLATE

/* Define to 1 if you have the `lzma' library (-llzma). */
#cmakedefine HAVE_LIBLZMA

/* Define to 1 if you have the `z' library (-lz). */
#cmakedefine HAVE_LIBZ

/* Define to 1 if you have the <lzma.h> header file. */
#cmakedefine HAVE_LZMA_H

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* Define to 1 if you have a working `mmap' system call. */
#cmakedefine HAVE_MMAP

/* Define to 1 if you have the `srand48_deterministic' function. */
#cmakedefine HAVE_SRAND48_DETERMINISTIC

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING "@PACKAGE_STRING@"

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL "@PACKAGE_URL@"

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"

/* Platform-dependent plugin filename extension. */
#cmakedefine PLUGIN_EXT "@PLUGIN_EXT@"

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Enable large inode numbers on Mac OS X 10.5.  */
#ifndef _DARWIN_USE_64_BIT_INODE
# define _DARWIN_USE_64_BIT_INODE 1
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES

/* Needed for PTHREAD_MUTEX_RECURSIVE */
#cmakedefine _XOPEN_SOURCE

/* for port to windows. Added by Ciaran Welsh */
#cmakedefine SSIZE_T

/* on linux we have include strings while windows its string (no 's') */
#cmakedefine HAVE_STRING
#cmakedefine HAVE_STRINGS

// indicator for presence of unistd.h
#cmakedefine HAVE_UNISTD_H

// indicator for presence of time.h
#cmakedefine HAVE_SYS_TIME_H

// indicator for presence of getopt.h
#cmakedefine HAVE_GETOPT_H

// indicator for presence of usleep.h
#cmakedefine HAVE_USLEEP_H

// indicator for presence of dirent.h
#cmakedefine HAVE_DIRENT_H

// indicator for presence of dlfcn.h
#cmakedefine HAVE_DLFCN_H

#ifdef _MSC_VER
//not #if defined(_WIN32) || defined(_WIN64) because we have strncasecmp in mingw
#define strncasecmp _strnicmp
#define strcasecmp _stricmp
#endif


/**
 * originally from hts_defs.h
 */
#if defined __MINGW32__
#include <stdio.h>     // For __MINGW_PRINTF_FORMAT macro
#endif

#ifdef __clang__
#ifdef __has_attribute
#define HTS_COMPILER_HAS(attribute) __has_attribute(attribute)
#endif

#elif defined __GNUC__
#define HTS_GCC_AT_LEAST(major, minor) \
    (__GNUC__ > (major) || (__GNUC__ == (major) && __GNUC_MINOR__ >= (minor)))
#endif

#ifndef HTS_COMPILER_HAS
#define HTS_COMPILER_HAS(attribute) 0
#endif
#ifndef HTS_GCC_AT_LEAST
#define HTS_GCC_AT_LEAST(major, minor) 0
#endif

#if HTS_COMPILER_HAS(__nonstring__) || HTS_GCC_AT_LEAST(8, 1)
#define HTS_NONSTRING __attribute__ ((__nonstring__))
#else
#define HTS_NONSTRING
#endif

#if HTS_COMPILER_HAS(__noreturn__) || HTS_GCC_AT_LEAST(3, 0)
#define HTS_NORETURN __attribute__ ((__noreturn__))
#else
#define HTS_NORETURN
#endif

// GCC introduced warn_unused_result in 3.4 but added -Wno-unused-result later
#if HTS_COMPILER_HAS(__warn_unused_result__) || HTS_GCC_AT_LEAST(4, 5)
#define HTS_RESULT_USED __attribute__ ((__warn_unused_result__))
#else
#define HTS_RESULT_USED
#endif

#if HTS_COMPILER_HAS(__unused__) || HTS_GCC_AT_LEAST(3, 0)
#define HTS_UNUSED __attribute__ ((__unused__))
#else
#define HTS_UNUSED
#endif

// On mingw the "printf" format type doesn't work.  It needs "gnu_printf"
// in order to check %lld and %z, otherwise it defaults to checking against
// the Microsoft library printf format options despite linking against the
// GNU posix implementation of printf.  The __MINGW_PRINTF_FORMAT macro
// expands to printf or gnu_printf as required, but obviously may not
// exist
#ifdef __MINGW_PRINTF_FORMAT
#define HTS_PRINTF_FMT __MINGW_PRINTF_FORMAT
#else
#define HTS_PRINTF_FMT printf
#endif

#if HTS_COMPILER_HAS(__format__) || HTS_GCC_AT_LEAST(3, 0)
#define HTS_FORMAT(type, idx, first) __attribute__((__format__ (type, idx, first)))
#else
#define HTS_FORMAT(type, idx, first)
#endif

#if HTS_COMPILER_HAS(__deprecated__) || HTS_GCC_AT_LEAST(6, 4)
#define HTS_DEPRECATED_ENUM(message) __attribute__ ((__deprecated__ (message)))
#else
#define HTS_DEPRECATED_ENUM(message)
#endif

// for S_ISREG
#define _CRT_INTERNAL_NONSTDC_NAMES 1

#include <sys/stat.h>

#if !defined(S_ISREG) && defined(S_IFMT) && defined(S_IFREG)
#define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
#endif
#if !defined(S_ISDIR) && defined(S_IFMT) && defined(S_IFDIR)
#define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
#endif


/**
 * Use cmake autogenerated and standardized macros for exports
 */
//#if defined(_WIN32) || defined(__CYGWIN__)
//#if defined(HTS_BUILDING_LIBRARY)
//#define HTS_EXPORT __declspec(dllexport)
//#else
//#define HTS_EXPORT
//#endif
//#elif HTS_COMPILER_HAS(__visibility__) || HTS_GCC_AT_LEAST(4,0)
//#define HTS_EXPORT __attribute__((__visibility__("default")))
//#elif defined(__SUNPRO_C) && __SUNPRO_C >= 0x550
//#define HTS_EXPORT __global
//#else
//#define HTS_EXPORT
//#endif


//#if HTS_COMPILER_HAS(__deprecated__) || HTS_GCC_AT_LEAST(4,5)
//#define HTS_DEPRECATED(message) __attribute__ ((__deprecated__ (message)))
//#elif HTS_GCC_AT_LEAST(3,1)
//#define HTS_DEPRECATED(message) __attribute__ ((__deprecated__))
//#else
//#define HTS_DEPRECATED(message)
//#endif
//


#endif //HTSLIB_CMAKE_CONFIG2_H_IN_H
